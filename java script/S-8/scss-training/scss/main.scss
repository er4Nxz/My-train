* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
// Variable
$width: 200px;
$height: 200px;
$flag:2 ;
// extend -- %=hide items
%border-radius {
  border-radius: 20px;
}
// if -- else -- else if
@if $flag == 1 {
  .parent {
    width: $width;
    height: $height;
    background-color: aquamarine;
    margin: 20px auto;
    padding: 1px;
    @extend %border-radius;
    .child {
      width: 50%;
      height: 50%;
      background-color: black;
      margin: 20px auto;
      @extend %border-radius;
    }
  }
} @else if $flag == 2 {
  .parent {
    width: $width;
    height: $height;
    background-color: black;
    margin: 20px auto;
    padding: 1px;
    @extend %border-radius;
    .child {
      width: 50%;
      height: 50%;
      background-color: aquamarine;
      margin: 20px auto;
      @extend %border-radius;
    }
  }
} @else {
  .parent {
    width: $width;
    height: $height;
    background-color: red;
    margin: 20px auto;
    padding: 1px;
    @extend %border-radius;
    .child {
      width: 50%;
      height: 50%;
      background-color: blue;
      margin: 20px auto;
      @extend %border-radius;
    }
  }
}
// Function = mixin / include
@mixin boxShadow($x,$y,$opacity,$color){
  box-shadow: $x $y $opacity $color;
}
.box{
  width: 100px;
  background-color: #3b3b3b;
  height: 100px;
  margin: 20px auto;
  @include boxShadow(0px, 0px, 20px, deeppink);
}
// train mixin / include
@mixin parallax($width,$height,$url,$repeat,$fixed){
  width: $width;
  height: $height;
  background-image: $url;
  background-repeat: $repeat;
  background-attachment: $fixed;
}
.img{
  @include parallax(300px,300px,url(../pans.png),center,no-repeat ,fixed);
}
